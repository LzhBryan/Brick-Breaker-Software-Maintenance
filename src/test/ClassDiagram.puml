@startuml
'https://plantuml.com/class-diagram

abstract class Ball{
    - Shape ballFace
    - Point2D center
    Point2D up
    Point2D down
    Point2D left
    Point2D right
    - Color border
    - Color inner
    - int speedX
    - int speedY
    + Ball(Point2D center,int radiusA,int radiusB,Color inner,Color border)
    # abstract Shape makeBall(Point2D center,int radiusA,int radiusB)
    + void move()
    + void setSpeed(int x,int y)
    + void moveTo(Point p)
    + void reverseX()
    + void reverseY()
    - void setPoints(double width,double height)
}

abstract class Brick{
    - static Random rnd
    - String name
    Shape brickFace
    - Color border
    - Color inner
    - int fullStrength
    - int strength
    - boolean broken
    + boolean setImpact(Point2D point , int dir)
    + final int findImpact(Ball b)
    + void repair()
    + void impact()
}

class CementBrick{
    - Crack crack
    - Shape brickFace
    + CementBrick(Point point, Dimension size)
    # Shape makeBrickFace(Point pos, Dimension size)
    + boolean setImpact(Point2D point, int dir)
    - void updateBrick()
    + void repair()
}

class ClayBrick{
    + ClayBrick(Point point, Dimension size)
    # Shape makeBrickFace(Point pos, Dimension size)
}

class Crack{
    - static Random rnd
    - GeneralPath crack
    - int crackDepth
    - int steps
    + void reset()
    # void makeCrack(Point2D point, int direction, Shape brickFace)
    # void makeCrack(Point start, Point end)
    - int randomInBounds(int bound)
    - boolean inMiddle(int i,int steps,int divisions)
    - int jumps(int bound,double probability)
    - Point makeRandomPoint(Point from,Point to, int direction)
}

class DebugConsole{
    - JFrame owner
    - DebugPanel debugPanel
    - GameBoard gameBoard
    - Wall wall
    - void initialize()
    - void setLocation()
}

class DebugPanel{
    - JButton skipLevel
    - JButton resetBalls
    - JSlider ballXSpeed
    - JSlider ballYSpeed
    - Wall wall
    - void initialize()
    - JButton makeButton(String title, ActionListener e)
    - JSlider makeSlider(int min, int max, ChangeListener e)
    + void setValues(int x,int y)
}

class GameBoard{
    - Timer gameTimer
    - Wall wall
    - String message
    - boolean showPauseMenu
    - Font menuFont
    - Rectangle continueButtonRect
    - Rectangle exitButtonRect
    - Rectangle restartButtonRect
    - int strLen
    - DebugConsole debugConsole
    - void initialize()
    + void paint(Graphics g)
    - void clear(Graphics2D g2d)
    - void drawBrick(Brick brick,Graphics2D g2d)
    - void drawBall(Ball ball,Graphics2D g2d)
    - void drawPlayer(Player p,Graphics2D g2d)
    - void drawMenu(Graphics2D g2d)
    - void obscureGameBoard(Graphics2D g2d)
    - void drawPauseMenu(Graphics2D g2d)
    + void keyPressed(KeyEvent keyEvent)
    + void keyReleased(KeyEvent keyEvent)
    + void mouseClicked(MouseEvent mouseEvent)
    + void mouseMoved(MouseEvent mouseEvent)
    + void onLostFocus()
}

class GameFrame{
    - GameBoard gameBoard
    - HomeMenu homeMenu
    - boolean gaming
    + void initialize()
    + void enableGameBoard()
    - void autoLocate()
    + void windowGainedFocus(WindowEvent windowEvent)
    + void windowLostFocus(WindowEvent windowEvent)
}

class GraphicsMain{

}

class HomeMenu{
    - Rectangle menuFace
    - Rectangle startButton
    - Rectangle menuButton
    - BasicStroke borderStoke
    - BasicStroke borderStoke_noDashes
    - Font greetingsFont
    - Font gameTitleFont
    - Font creditsFont
    - Font buttonFont
    - GameFrame owner
    - boolean startClicked
    - boolean menuClicked
    + void paint(Graphics g)
    + void drawMenu(Graphics2D g2d)
    - void drawContainer(Graphics2D g2d)
    - void drawText(Graphics2D g2d)
    - void drawButton(Graphics2D g2d)
    + void mouseClicked(MouseEvent mouseEvent)
    + void mousePressed(MouseEvent mouseEvent)
    + void mouseReleased(MouseEvent mouseEvent)
    + void mouseMoved(MouseEvent mouseEvent)
}

class Player{
    - Rectangle playerFace
    - Point ballPoint
    - int moveAmount
    - int min
    - int max
    - Rectangle makeRectangle(int width,int height)
    + boolean impact(Ball b)
    + void move()
    + void moveLeft()
    + void movRight()
    + void stop()
    + void moveTo(Point p)
}

class RubberBall{
    # Shape makeBall(Point2D center, int radiusA, int radiusB)
}

class SteelBrick{
    - Random rnd
    - Shape brickFace
    # Shape makeBrickFace(Point pos, Dimension size)
    + boolean setImpact(Point2D point , int dir)
    + void impact()
}

class Wall{
    - Random rnd
    - Rectangle area
    Brick[] bricks
    Ball ball
    Player player
    - Brick[][] levels
    - int level
    - Point startPoint
    - int brickCount
    - int ballCount
    - boolean ballLost
    - Brick[] makeSingleTypeLevel(Rectangle drawArea, int brickCnt, int lineCnt, double brickSizeRatio, int type)
    - Brick[] makeChessboardLevel(Rectangle drawArea, int brickCnt, int lineCnt, double brickSizeRatio, int typeA, int typeB)
    - void makeBall(Point2D ballPos)
    - Brick[][] makeLevels(Rectangle drawArea,int brickCount,int lineCount,double brickDimensionRatio)
    + void move()
    + void findImpacts()
    - boolean impactWall()
    - boolean impactBorder()
    + void ballReset()
    + void wallReset()
    + boolean ballEnd()
    + boolean isDone()
    + void nextLevel()
    + boolean hasLevel()
    + void setBallXSpeed(int s)
    + void setBallYSpeed(int s)
    + void resetBallCount()
    - Brick makeBrick(Point point, Dimension size, int type)
}

Brick <|-- CementBrick
Brick <|-- ClayBrick
Brick <|-- SteelBrick

Crack --* CementBrick

Ball <|-- RubberBall

@enduml